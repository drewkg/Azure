{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the resources to be created, defaults to the resource group location."
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "[concat('ss','azdo')]",
      "metadata": {
        "description": "Globally unique dns name for the scale set. Must be 3-61 characters in length and globally unique across Azure."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 100
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vmssadmin",
      "metadata": {
        "description": "Admin username on all the scaleset VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Admin password for all the scaleset VMs"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-agentpool",
      "metadata": {
        "description": "vName of the virtual network to deploy the scale set into."
      }
    },
    "vmssSubnetName": {
      "type": "string",
      "defaultValue": "snet-vmss",
      "metadata": {
        "description": "Name of the subnet to deploy the scale set into."
      }
    },
    "agentPoolSubnetRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the build agent scaleset subnet created in the new VNET"
      },
      "defaultValue": "10.10.0.0/24"
    },
    "azureBastionSnetAddressRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the azure bastion subnet created in the new VNET"
      },
      "defaultValue": "10.10.1.0/24"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.10.0.0/16"
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "nsg-vmss"
    },
    "bastionSubnetNsgName": {
      "type": "string",
      "defaultValue": "nsg-bastion"
    },
    "ImageReferenceId": {
      "defaultValue": "/subscriptions/28fe843b-a2d0-4f2a-97b4-cbd2a52a968e/resourceGroups/RG-DevOps-QA-BuildAgent-Management/providers/Microsoft.Compute/galleries/sigDiveTrainAzDOAgentsQA/images/DriveTrainWinPS01",
      "type": "String"
    }
  },
  "variables": { },
  "resources": [
    {
      "comments": "Simple Network Security Group for subnet [variables('subnetName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[parameters('nsgName')]",
      "location": "[parameters('Location')]",
      "tags": {
        "displayName": "NSG for Agent Scaleset Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('bastionSubnetNsgName')]",
      "location": "[parameters('Location')]",
      "tags": {
        "displayName": "NSG for Bastion Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "bastion-in-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-control-in-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "GatewayManager",
              "destinationPortRanges": [
                "443",
                "4443"
              ],
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-in-deny",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 900,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-vnet-out-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "bastion-azure-out-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound"
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('Location')]",
      "apiVersion": "2019-11-01",
      "dependsOn": [
        "[parameters('nsgName')]"
      ],
      "tags": {
        "displayName": "Virtual Network"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('vmssSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('agentPoolSubnetRange')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
              }
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "[parameters('azureBastionSnetAddressRange')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionSubnetNsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2019-07-01",
      "name": "[parameters('vmssName')]",
      "location": "[parameters('Location')]",
      "comments": "Virtual Machine Scale Set for hosting VM's that will be registered as Azure DevOps Agents.",
      "dependsOn": [
        "[parameters('vnetName')]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "capacity": "[parameters('instanceCount')]"
      },
      "tags": {
        "displayName": "VM Scaleset"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "imageReference": {
              "id": "[parameters('ImageReferenceId')]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('VMssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": false
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('vmssSubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ]
}