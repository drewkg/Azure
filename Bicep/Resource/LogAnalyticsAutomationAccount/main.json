{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "10331932802211493348"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[substring(deployment().properties.templateLink.uri, 0, lastIndexOf(deployment().properties.templateLink.uri, '/'))]",
      "metadata": {
        "description": "URI to artifacts location"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "UKSouth",
      "allowedValues": [
        "EastUS",
        "EastUS2",
        "WestUS",
        "WestUS2",
        "NorthCentralUS",
        "CentralUS",
        "SouthCentralUS",
        "WestCentralUS",
        "BrazilSouth",
        "CanadaCentral",
        "EastAsia",
        "SouthEastAsia",
        "CentralIndia",
        "JapanEast",
        "AustraliaEast",
        "AustraliaSouthEast",
        "KoreaCentral",
        "NorwayEast",
        "NorthEurope",
        "WestEurope",
        "FranceCentral",
        "UKSouth",
        "SwitzerlandNorth",
        "UAENorth"
      ],
      "metadata": {
        "description": "The location of the resources created, this is limited to only the locations that support linked Log Analytics and Automation Account."
      }
    },
    "application": {
      "type": "string",
      "defaultValue": "demo",
      "minLength": 1,
      "maxLength": 15,
      "metadata": {
        "description": "The application prefix, used within resource naming to ensure grouping of resources within the Azure portal."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "test",
      "metadata": {
        "description": "The environment tag to provide unique resources between test / production and ephemeral environments."
      }
    },
    "baseTime": {
      "type": "string",
      "defaultValue": "[utcNow('u')]",
      "metadata": {
        "description": "Date for Automation Accounts schedules to start on, defaults to the next day, this should be ALWAYS left as the default."
      }
    }
  },
  "variables": {
    "automationAccountName": "[format('{0}-{1}-{2}-aa', parameters('application'), parameters('environment'), variables('automationAccountLocation'))]",
    "automationAccountLocation": "[if(equals(parameters('location'), 'EastUS'), 'EastUS2', if(equals(parameters('location'), 'EastUS2'), 'EastUS', parameters('location')))]",
    "logAnalyticsWorkspaceName": "[format('{0}-{1}-{2}-log', parameters('application'), parameters('environment'), parameters('location'))]",
    "scheduleStartDate": "[dateTimeAdd(parameters('baseTime'), 'P1D', 'yyyy-MM-dd')]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', variables('logAnalyticsWorkspaceName'), 'Automation')]",
      "properties": {
        "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccount')]",
      "location": "[parameters('location')]",
      "properties": {
        "runbookType": "PowerShell",
        "logProgress": false,
        "logVerbose": false,
        "description": "Update Azure PowerShell modules in an Azure Automation account.",
        "publishContentLink": {
          "uri": "[uri(parameters('_artifactsLocation'), format('Runbook/Powershell/Update-AutomationAzureModulesForAccount.ps1{0}', parameters('_artifactsLocationSasToken')))]",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', variables('automationAccountName'), 'Update-AzurePolicyComplianceState')]",
      "location": "[parameters('location')]",
      "properties": {
        "runbookType": "PowerShell",
        "logProgress": false,
        "logVerbose": false,
        "description": "Update Azure PowerShell modules in an Azure Automation account.",
        "publishContentLink": {
          "uri": "[uri(parameters('_artifactsLocation'), format('Runbook/Powershell/Update-AzurePolicyComplianceState.ps1{0}', parameters('_artifactsLocationSasToken')))]",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccountSchedule')]",
      "properties": {
        "description": "Update-AutomationAzureModulesForAccount Monthly Schedule",
        "startTime": "[format('{0}T02:00:00Z', variables('scheduleStartDate'))]",
        "advancedSchedule": {
          "monthlyOccurrences": [
            {
              "day": "Sunday",
              "occurrence": 1
            }
          ]
        },
        "frequency": "Month",
        "timeZone": "Europe/London",
        "interval": 1
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', variables('automationAccountName'), 'Update-AzurePolicyComplianceStateSchedule')]",
      "properties": {
        "description": "Update-AzurePolicyComplianceStateSchedule Daily Schedule",
        "startTime": "[format('{0}T01:00:00Z', variables('scheduleStartDate'))]",
        "frequency": "Day",
        "timeZone": "Europe/London",
        "interval": 1
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', variables('automationAccountName'), guid(format('{0}-{1}', resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccount'), resourceId('Microsoft.Automation/automationAccounts/schedules', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccountSchedule'))))]",
      "properties": {
        "parameters": {
          "ResourceGroupName": "[resourceGroup().name]",
          "AutomationAccountName": "[variables('automationAccountName')]"
        },
        "runbook": {
          "name": "Update-AutomationAzureModulesForAccount"
        },
        "schedule": {
          "name": "Update-AutomationAzureModulesForAccountSchedule"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccount')]",
        "[resourceId('Microsoft.Automation/automationAccounts/schedules', variables('automationAccountName'), 'Update-AutomationAzureModulesForAccountSchedule')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[format('AzureActivity({0})', variables('logAnalyticsWorkspaceName'))]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "[format('AzureActivity({0})', variables('logAnalyticsWorkspaceName'))]",
        "publisher": "Microsoft",
        "product": "[format('OMSGallery/{0}', 'AzureActivity')]",
        "promotionCode": ""
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "containedResources": [
          "[resourceId('Microsoft.OperationalInsights/workspaces/views/', variables('logAnalyticsWorkspaceName'), format('AzureActivity({0})', variables('logAnalyticsWorkspaceName')))]"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[format('AzureAutomation({0})', variables('logAnalyticsWorkspaceName'))]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "[format('AzureAutomation({0})', variables('logAnalyticsWorkspaceName'))]",
        "publisher": "Microsoft",
        "product": "[format('OMSGallery/{0}', 'AzureAutomation')]",
        "promotionCode": ""
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "containedResources": [
          "[resourceId('Microsoft.OperationalInsights/workspaces/views/', variables('logAnalyticsWorkspaceName'), format('AzureAutomation({0})', variables('logAnalyticsWorkspaceName')))]"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[format('KeyVaultAnalytics({0})', variables('logAnalyticsWorkspaceName'))]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "[format('KeyVaultAnalytics({0})', variables('logAnalyticsWorkspaceName'))]",
        "publisher": "Microsoft",
        "product": "[format('OMSGallery/{0}', 'KeyVaultAnalytics')]",
        "promotionCode": ""
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "containedResources": [
          "[resourceId('Microsoft.OperationalInsights/workspaces/views/', variables('logAnalyticsWorkspaceName'), format('KeyVaultAnalytics({0})', variables('logAnalyticsWorkspaceName')))]"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[format('SecurityCenterFree({0})', variables('logAnalyticsWorkspaceName'))]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "[format('SecurityCenterFree({0})', variables('logAnalyticsWorkspaceName'))]",
        "publisher": "Microsoft",
        "product": "[format('OMSGallery/{0}', 'SecurityCenterFree')]",
        "promotionCode": ""
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "containedResources": [
          "[resourceId('Microsoft.OperationalInsights/workspaces/views/', variables('logAnalyticsWorkspaceName'), format('SecurityCenterFree({0})', variables('logAnalyticsWorkspaceName')))]"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', variables('logAnalyticsWorkspaceName'))]",
      "name": "diagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ],
        "logs": [
          {
            "category": "Audit",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2023-11-01",
      "name": "[variables('automationAccountName')]",
      "location": "[variables('automationAccountLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Basic"
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', variables('automationAccountName'))]",
      "name": "[guid(format('{0}{1}', resourceGroup().id, 'AAMSIAutomationContributorAssignment'))]",
      "properties": {
        "description": "MSI granted Automation Contributor on Automation Account, to manage modules.",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName')), '2023-11-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', variables('logAnalyticsWorkspaceName'))]",
      "name": "[guid(format('{0}{1}', resourceGroup().id, 'AAMSILogAnalyticsContributorAssignment'))]",
      "properties": {
        "description": "MSI granted Log Analytics Contributor on Log Analytics Workspace, to query shared access keys.",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName')), '2023-11-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', variables('automationAccountName'))]",
      "name": "diagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ],
        "logs": [
          {
            "category": "JobLogs",
            "enabled": true
          },
          {
            "category": "JobStreams",
            "enabled": true
          },
          {
            "category": "DscNodeStatus",
            "enabled": true
          },
          {
            "category": "AuditEvent",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    }
  ],
  "outputs": {
    "Subscription": {
      "type": "string",
      "value": "[subscription().subscriptionId]"
    },
    "ResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "LogAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[variables('logAnalyticsWorkspaceName')]"
    },
    "AutomationAccountName": {
      "type": "string",
      "value": "[variables('automationAccountName')]"
    }
  }
}